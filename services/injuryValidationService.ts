import { Exercise, WeightType, UserProfile, WellnessCheck } from '../types';
import { HealthProfileService } from './healthProfileService';

// –ú–∞–ø–∞ –Ω–µ–±–µ–∑–ø–µ—á–Ω–∏—Ö –≤–ø—Ä–∞–≤ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç—Ä–∞–≤–º (–∑ —á–∞—Å—Ç–∫–æ–≤–∏–º —Å–ø—ñ–≤–ø–∞–¥—ñ–Ω–Ω—è–º –Ω–∞–∑–≤)
const INJURY_EXERCISE_MAP = {
  '—Å–ø–∏–Ω–∞': [
    '–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è –∑—ñ —à—Ç–∞–Ω–≥–æ—é',
    '—Å—Ç–∞–Ω–æ–≤–∞ —Ç—è–≥–∞',
    '–∂–∏–º —Å—Ç–æ—è—á–∏',
    '–Ω–∞—Ö–∏–ª–∏ –∑—ñ —à—Ç–∞–Ω–≥–æ—é',
    '—Ç—è–≥–∞ —à—Ç–∞–Ω–≥–∏ –≤ –Ω–∞—Ö–∏–ª—ñ',
    '–≥—ñ–ø–µ—Ä–µ–∫—Å—Ç–µ–Ω–∑—ñ—è',
    '—Ä—É–º—É–Ω—Å—å–∫–∞ —Å—Ç–∞–Ω–æ–≤–∞',
    '—Å—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞',
    '–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å–æ —à—Ç–∞–Ω–≥–æ–π',
    '–∂–∏–º —à—Ç–∞–Ω–≥–∏ —Å—Ç–æ—è—á–∏',
    '—Ç—è–≥–∞ –≤ –Ω–∞–∫–ª–æ–Ω–µ'
  ],
  '—Ö—Ä–µ–±–µ—Ç': [
    '–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è –∑—ñ —à—Ç–∞–Ω–≥–æ—é',
    '—Å—Ç–∞–Ω–æ–≤–∞ —Ç—è–≥–∞',
    '–∂–∏–º —Å—Ç–æ—è—á–∏',
    '–Ω–∞—Ö–∏–ª–∏ –∑—ñ —à—Ç–∞–Ω–≥–æ—é',
    '—Ç—è–≥–∞ —à—Ç–∞–Ω–≥–∏ –≤ –Ω–∞—Ö–∏–ª—ñ',
    '—Ä—É–º—É–Ω—Å—å–∫–∞ —Å—Ç–∞–Ω–æ–≤–∞',
    '—Å—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞',
    '–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å–æ —à—Ç–∞–Ω–≥–æ–π'
  ],
  '–ø–æ–ø–µ—Ä–µ–∫': [
    '–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è –∑—ñ —à—Ç–∞–Ω–≥–æ—é',
    '—Å—Ç–∞–Ω–æ–≤–∞ —Ç—è–≥–∞',
    '–Ω–∞—Ö–∏–ª–∏ –∑—ñ —à—Ç–∞–Ω–≥–æ—é',
    '—Ç—è–≥–∞ —à—Ç–∞–Ω–≥–∏ –≤ –Ω–∞—Ö–∏–ª—ñ',
    '—Ä—É–º—É–Ω—Å—å–∫–∞ —Å—Ç–∞–Ω–æ–≤–∞',
    '—Å—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞',
    '–Ω–∞–∫–ª–æ–Ω—ã —Å–æ —à—Ç–∞–Ω–≥–æ–π'
  ],
  '–∫–æ–ª—ñ–Ω–æ': [
    '–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è',
    '–≤–∏–ø–∞–¥–∏',
    '–±–æ–ª–≥–∞—Ä—Å—å–∫—ñ –ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è',
    '–∂–∏–º –Ω–æ–≥–∞–º–∏',
    '–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è',
    '–≤—ã–ø–∞–¥—ã',
    '–±–æ–ª–≥–∞—Ä—Å–∫–∏–µ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è',
    '–∂–∏–º –Ω–æ–≥'
  ],
  '–∫–æ–ª—ñ–Ω–∞': [
    '–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è',
    '–≤–∏–ø–∞–¥–∏',
    '–±–æ–ª–≥–∞—Ä—Å—å–∫—ñ –ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è',
    '–∂–∏–º –Ω–æ–≥–∞–º–∏',
    '–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è',
    '–≤—ã–ø–∞–¥—ã',
    '–±–æ–ª–≥–∞—Ä—Å–∫–∏–µ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è',
    '–∂–∏–º –Ω–æ–≥'
  ],
  '–ø–ª–µ—á–µ': [
    '–∂–∏–º –Ω–∞–¥ –≥–æ–ª–æ–≤–æ—é',
    '–ø—ñ–¥—Ç—è–≥—É–≤–∞–Ω–Ω—è',
    '–∂–∏–º —Å—Ç–æ—è—á–∏',
    '–∞—Ä–º—ñ–π—Å—å–∫–∏–π –∂–∏–º',
    '–∂–∏–º —à—Ç–∞–Ω–≥–∏ —Å—Ç–æ—è—á–∏',
    '–ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è',
    '–∞—Ä–º–µ–π—Å–∫–∏–π –∂–∏–º'
  ],
  '–ø–ª–µ—á—ñ': [
    '–∂–∏–º –Ω–∞–¥ –≥–æ–ª–æ–≤–æ—é',
    '–ø—ñ–¥—Ç—è–≥—É–≤–∞–Ω–Ω—è',
    '–∂–∏–º —Å—Ç–æ—è—á–∏',
    '–∞—Ä–º—ñ–π—Å—å–∫–∏–π –∂–∏–º',
    '–∂–∏–º —à—Ç–∞–Ω–≥–∏ —Å—Ç–æ—è—á–∏',
    '–ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è',
    '–∞—Ä–º–µ–π—Å–∫–∏–π –∂–∏–º'
  ]
};

// –ë–µ–∑–ø–µ—á–Ω—ñ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏ –¥–ª—è –Ω–µ–±–µ–∑–ø–µ—á–Ω–∏—Ö –≤–ø—Ä–∞–≤ (–∑ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ –¥–ª—è –ø–æ—à—É–∫—É)
const SAFE_ALTERNATIVES = {
  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏ –¥–ª—è –ø—Ä–æ–±–ª–µ–º –∑—ñ —Å–ø–∏–Ω–æ—é
  '—Å–ø–∏–Ω–∞_–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è': {
    name: '–ñ–∏–º –Ω–æ–≥–∞–º–∏ –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ñ',
    description: 'üõ°Ô∏è –ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é. –ë–µ–∑–ø–µ—á–Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –ø—Ä–∏—Å—ñ–¥–∞–Ω—å –±–µ–∑ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ —Ö—Ä–µ–±–µ—Ç.',
    weightType: 'total' as WeightType,
    sets: '3',
    reps: '12-15',
    rest: '90 —Å–µ–∫—É–Ω–¥',
    videoSearchQuery: '–∂–∏–º –Ω–æ–≥–∞–º–∏ —Ç–µ—Ö–Ω—ñ–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è',
    safetyNote: '–ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é'
  },
  '—Å–ø–∏–Ω–∞_—Å—Ç–∞–Ω–æ–≤–∞': {
    name: '–¢—è–≥–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫—É –¥–æ –ø–æ—è—Å–∞',
    description: 'üõ°Ô∏è –ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é. –ë–µ–∑–ø–µ—á–Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ —Å—Ç–∞–Ω–æ–≤–æ—ó —Ç—è–≥–∏ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é —Å–ø–∏–Ω–∏.',
    weightType: 'total' as WeightType,
    sets: '3',
    reps: '10-12',
    rest: '60 —Å–µ–∫—É–Ω–¥',
    videoSearchQuery: '—Ç—è–≥–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫—É —Ç–µ—Ö–Ω—ñ–∫–∞',
    safetyNote: '–ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é'
  },
  '—Å–ø–∏–Ω–∞_–∂–∏–º': {
    name: '–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π —Å–∏–¥—è—á–∏ (–∑ –æ–ø–æ—Ä–æ—é)',
    description: 'üõ°Ô∏è –ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é. –ë–µ–∑–ø–µ—á–Ω–∏–π –∂–∏–º –∑ –ø–æ–≤–Ω–æ—é –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é —Å–ø–∏–Ω–∏.',
    weightType: 'single' as WeightType,
    sets: '3',
    reps: '8-10',
    rest: '60 —Å–µ–∫—É–Ω–¥',
    videoSearchQuery: '–∂–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π —Å–∏–¥—è—á–∏ —Ç–µ—Ö–Ω—ñ–∫–∞',
    safetyNote: '–ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é'
  },
  '—Å–ø–∏–Ω–∞_–≥—ñ–ø–µ—Ä–µ–∫—Å—Ç–µ–Ω–∑—ñ—è': {
    name: '–ü–ª–∞–Ω–∫–∞ –Ω–∞ –ø–µ—Ä–µ–¥–ø–ª—ñ—á—á—è—Ö',
    description: 'üõ°Ô∏è –ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é. –ë–µ–∑–ø–µ—á–Ω–µ –∑–º—ñ—Ü–Ω–µ–Ω–Ω—è –∫–æ—Ä—É –±–µ–∑ –≥—ñ–ø–µ—Ä—Ä–æ–∑–≥–∏–Ω–∞–Ω–Ω—è.',
    weightType: 'bodyweight' as WeightType,
    sets: '3',
    reps: '30-60 —Å–µ–∫—É–Ω–¥',
    rest: '45 —Å–µ–∫—É–Ω–¥',
    videoSearchQuery: '–ø–ª–∞–Ω–∫–∞ —Ç–µ—Ö–Ω—ñ–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è',
    safetyNote: '–ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é'
  },
  // –ó–∞–≥–∞–ª—å–Ω—ñ –±–µ–∑–ø–µ—á–Ω—ñ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏
  'default_—Å–ø–∏–Ω–∞': {
    name: '–ë–µ–∑–ø–µ—á–Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –¥–ª—è —Å–ø–∏–Ω–∏',
    description: 'üõ°Ô∏è –ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é. –ê–¥–∞–ø—Ç–æ–≤–∞–Ω–∞ –≤–ø—Ä–∞–≤–∞ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º –Ω–∞ —Ö—Ä–µ–±–µ—Ç.',
    weightType: 'bodyweight' as WeightType,
    sets: '3',
    reps: '10-15',
    rest: '60 —Å–µ–∫—É–Ω–¥',
    videoSearchQuery: '–±–µ–∑–ø–µ—á–Ω—ñ –≤–ø—Ä–∞–≤–∏ –¥–ª—è —Å–ø–∏–Ω–∏',
    safetyNote: '–ó–∞–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å–ø–∏–Ω–æ—é'
  }
};

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –≤–ø—Ä–∞–≤–∞ –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ—é –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç—Ä–∞–≤–º–∞–º–∏
 */
export const isExerciseDangerous = (
  exercise: Exercise,
  healthConstraints: string[],
  wellnessNotes?: string
): boolean => {
  const exerciseName = exercise.name.toLowerCase();
  const allConstraints = [...healthConstraints];
  
  // –î–æ–¥–∞—î–º–æ –æ–±–º–µ–∂–µ–Ω–Ω—è –∑ –Ω–æ—Ç–∞—Ç–æ–∫ —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è
  if (wellnessNotes) {
    const notes = wellnessNotes.toLowerCase();
    Object.keys(INJURY_EXERCISE_MAP).forEach(injury => {
      if (notes.includes(injury)) {
        allConstraints.push(injury);
      }
    });
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω–µ –æ–±–º–µ–∂–µ–Ω–Ω—è
  for (const constraint of allConstraints) {
    const dangerousExercises = INJURY_EXERCISE_MAP[constraint as keyof typeof INJURY_EXERCISE_MAP];
    if (dangerousExercises) {
      for (const dangerous of dangerousExercises) {
        const dangerousLower = dangerous.toLowerCase();
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å—Ç–∫–æ–≤–µ —Å–ø—ñ–≤–ø–∞–¥—ñ–Ω–Ω—è –≤ –æ–±–æ—Ö –Ω–∞–ø—Ä—è–º–∫–∞—Ö
        if (exerciseName.includes(dangerousLower) || dangerousLower.includes(exerciseName)) {
          console.log(`üö® [isExerciseDangerous] –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–±–µ–∑–ø–µ—á–Ω—É –≤–ø—Ä–∞–≤—É: "${exercise.name}" —á–µ—Ä–µ–∑ –æ–±–º–µ–∂–µ–Ω–Ω—è "${constraint}" (—Å–ø—ñ–≤–ø–∞–¥—ñ–Ω–Ω—è –∑ "${dangerous}")`);
          return true;
        }
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤
        const exerciseWords = exerciseName.split(' ');
        const dangerousWords = dangerousLower.split(' ');
        
        let matchCount = 0;
        for (const word of exerciseWords) {
          if (word.length > 3 && dangerousWords.some(dw => dw.includes(word) || word.includes(dw))) {
            matchCount++;
          }
        }
        
        // –Ø–∫—â–æ —Å–ø—ñ–≤–ø–∞–¥–∞—î –±—ñ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω–∏ –∑–Ω–∞—á—É—â–∏—Ö —Å–ª—ñ–≤ - –≤–≤–∞–∂–∞—î–º–æ –Ω–µ–±–µ–∑–ø–µ—á–Ω–∏–º
        if (matchCount >= Math.min(2, Math.ceil(exerciseWords.length / 2))) {
          console.log(`üö® [isExerciseDangerous] –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–±–µ–∑–ø–µ—á–Ω—É –≤–ø—Ä–∞–≤—É –∑–∞ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏: "${exercise.name}" —á–µ—Ä–µ–∑ –æ–±–º–µ–∂–µ–Ω–Ω—è "${constraint}" (${matchCount} —Å–ø—ñ–≤–ø–∞–¥—ñ–Ω—å –∑ "${dangerous}")`);
          return true;
        }
      }
    }
  }

  return false;
};

/**
 * –ó–Ω–∞—Ö–æ–¥–∏—Ç—å –±–µ–∑–ø–µ—á–Ω—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É –¥–ª—è –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ—ó –≤–ø—Ä–∞–≤–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç—Ä–∞–≤–º–∏
 */
export const getSafeAlternative = (exercise: Exercise, constraints: string[] = []): Exercise | null => {
  const exerciseName = exercise.name.toLowerCase();
  
  console.log(`üîç [getSafeAlternative] –®—É–∫–∞—î–º–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É –¥–ª—è "${exercise.name}" –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º–∏:`, constraints);
  
  // –°–ø–æ—á–∞—Ç–∫—É —à—É–∫–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –æ–±–º–µ–∂–µ–Ω–Ω—è
  for (const constraint of constraints) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤—ñ –≤–ø—Ä–∞–≤–∏
    if (exerciseName.includes('–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è') || exerciseName.includes('–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è')) {
      const alternative = (SAFE_ALTERNATIVES as any)[`${constraint}_–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è`];
      if (alternative) {
        console.log(`‚úÖ [getSafeAlternative] –ó–Ω–∞–π–¥–µ–Ω–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É –¥–ª—è –ø—Ä–∏—Å—ñ–¥–∞–Ω—å: ${alternative.name}`);
        return createSafeExercise(exercise, alternative, constraint);
      }
    }
    
    if (exerciseName.includes('—Å—Ç–∞–Ω–æ–≤–∞') || exerciseName.includes('—Å—Ç–∞–Ω–æ–≤–∞—è')) {
      const alternative = (SAFE_ALTERNATIVES as any)[`${constraint}_—Å—Ç–∞–Ω–æ–≤–∞`];
      if (alternative) {
        console.log(`‚úÖ [getSafeAlternative] –ó–Ω–∞–π–¥–µ–Ω–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É –¥–ª—è —Å—Ç–∞–Ω–æ–≤–æ—ó: ${alternative.name}`);
        return createSafeExercise(exercise, alternative, constraint);
      }
    }
    
    if (exerciseName.includes('–∂–∏–º') && (exerciseName.includes('—Å—Ç–æ—è—á–∏') || exerciseName.includes('—Å—Ç–æ—è'))) {
      const alternative = (SAFE_ALTERNATIVES as any)[`${constraint}_–∂–∏–º`];
      if (alternative) {
        console.log(`‚úÖ [getSafeAlternative] –ó–Ω–∞–π–¥–µ–Ω–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É –¥–ª—è –∂–∏–º—É —Å—Ç–æ—è—á–∏: ${alternative.name}`);
        return createSafeExercise(exercise, alternative, constraint);
      }
    }
    
    if (exerciseName.includes('–≥—ñ–ø–µ—Ä–µ–∫—Å—Ç–µ–Ω–∑—ñ—è') || exerciseName.includes('–≥–∏–ø–µ—Ä—ç–∫—Å—Ç–µ–Ω–∑–∏—è')) {
      const alternative = (SAFE_ALTERNATIVES as any)[`${constraint}_–≥—ñ–ø–µ—Ä–µ–∫—Å—Ç–µ–Ω–∑—ñ—è`];
      if (alternative) {
        console.log(`‚úÖ [getSafeAlternative] –ó–Ω–∞–π–¥–µ–Ω–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É –¥–ª—è –≥—ñ–ø–µ—Ä–µ–∫—Å—Ç–µ–Ω–∑—ñ—ó: ${alternative.name}`);
        return createSafeExercise(exercise, alternative, constraint);
      }
    }
    
    // –Ø–∫—â–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–æ—ó –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏ –Ω–µ–º–∞—î - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É
    const defaultAlternative = (SAFE_ALTERNATIVES as any)[`default_${constraint}`];
    if (defaultAlternative) {
      console.log(`‚ö†Ô∏è [getSafeAlternative] –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É –¥–ª—è ${constraint}: ${defaultAlternative.name}`);
      return createSafeExercise(exercise, defaultAlternative, constraint);
    }
  }
  
  console.log(`‚ùå [getSafeAlternative] –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏ –¥–ª—è "${exercise.name}"`);
  return null;
};

/**
 * –°—Ç–≤–æ—Ä—é—î –±–µ–∑–ø–µ—á–Ω—É –≤–ø—Ä–∞–≤—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏
 */
const createSafeExercise = (originalExercise: Exercise, alternative: any, constraint: string): Exercise => {
  return {
    id: originalExercise.id,
    name: alternative.name,
    description: alternative.description,
    sets: alternative.sets,
    reps: alternative.reps,
    rest: alternative.rest,
    weightType: alternative.weightType,
    videoSearchQuery: alternative.videoSearchQuery,
    targetWeight: null,
    targetReps: null,
    recommendation: {
      text: `üõ°Ô∏è ${alternative.safetyNote}: –∑–∞–º—ñ–Ω–µ–Ω–æ "${originalExercise.name}" –Ω–∞ "${alternative.name}" –¥–ª—è –±–µ–∑–ø–µ–∫–∏.`,
      action: 'safety_replacement'
    },
    isCompletedDuringSession: false,
    sessionLoggedSets: [],
    sessionSuccess: false,
    notes: `üö® –ó–ê–ú–Ü–ù–ê –ß–ï–†–ï–ó –¢–†–ê–í–ú–£: "${originalExercise.name}" ‚Üí "${alternative.name}" (${constraint})`
  };
};

/**
 * –í–∞–ª—ñ–¥—É—î —Ç–∞ –∞–¥–∞–ø—Ç—É—î –ø–ª–∞–Ω —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ –¥–ª—è –±–µ–∑–ø–µ–∫–∏
 */
export const validateWorkoutSafety = (
  exercises: Exercise[],
  userProfile: UserProfile,
  wellnessCheck?: WellnessCheck
): Exercise[] => {
  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ HealthProfileService –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –æ–±–º–µ–∂–µ–Ω—å
  const healthConstraints = HealthProfileService.getAllCurrentLimitations(userProfile, wellnessCheck);
  const wellnessNotes = wellnessCheck?.notes;
  
  console.log('üõ°Ô∏è [validateWorkoutSafety] –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–µ–∑–ø–µ–∫—É –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º–∏:', {
    totalConstraints: healthConstraints.length,
    constraints: healthConstraints,
    activeConditions: userProfile.healthProfile?.conditions?.filter(c => c.isActive)?.length || 0
  });
  
  return exercises.map(exercise => {
    if (isExerciseDangerous(exercise, healthConstraints, wellnessNotes)) {
      const safeAlternative = getSafeAlternative(exercise, healthConstraints);
      if (safeAlternative) {
        console.log(`üõ°Ô∏è [SAFETY] Replaced dangerous exercise "${exercise.name}" with "${safeAlternative.name}" due to constraints:`, healthConstraints);
        return safeAlternative;
      } else {
        // –Ø–∫—â–æ –Ω–µ–º–∞—î –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏, –ø—Ä–∏–Ω–∞–π–º–Ω—ñ –¥–æ–¥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
        console.log(`‚ö†Ô∏è [SAFETY] No alternative found for dangerous exercise "${exercise.name}", adding warning`);
        return {
          ...exercise,
          recommendation: {
            text: `üö® –£–í–ê–ì–ê! –¶—è –≤–ø—Ä–∞–≤–∞ –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ—é –ø—Ä–∏ –≤–∞—à–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –∑–¥–æ—Ä–æ–≤'—è (${healthConstraints.join(', ')}). –í–∏–∫–æ–Ω—É–π—Ç–µ –∑ –æ–±–µ—Ä–µ–∂–Ω—ñ—Å—Ç—é –∞–±–æ –ø—Ä–æ–ø—É—Å—Ç—ñ—Ç—å.`,
            action: 'change_exercise'
          },
          notes: `‚ö†Ô∏è –ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ –Ω–µ–±–µ–∑–ø–µ—á–Ω–∞ –≤–ø—Ä–∞–≤–∞ —á–µ—Ä–µ–∑: ${healthConstraints.join(', ')}`
        };
      }
    }
    return exercise;
  });
};

/**
 * –î–æ–¥–∞—î –±–∞–∑–æ–≤—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–æ –≤–ø—Ä–∞–≤ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø–ª–∞–Ω—ñ
 */
export const addBaseRecommendations = (exercises: Exercise[]): Exercise[] => {
  return exercises.map(exercise => {
    if (!exercise.recommendation || !exercise.recommendation.text) {
      let recommendationText = '';
      
      // –ì–µ–Ω–µ—Ä—É—î–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞–∑–≤–∏ –≤–ø—Ä–∞–≤–∏ —Ç–∞ —Ç–∏–ø—É –≤–∞–≥–∏
      const exerciseName = exercise.name.toLowerCase();
      
      if (exerciseName.includes('–ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è')) {
        recommendationText = '–§–æ–∫—É—Å—É–π—Ç–µ—Å—å –Ω–∞ –≥–ª–∏–±–∏–Ω—ñ –ø—Ä–∏—Å—ñ–¥–∞–Ω—å —Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –ø–æ—Å—Ç–∞–Ω–æ–≤—Ü—ñ –Ω—ñ–≥. –ü–æ—Å—Ç—É–ø–æ–≤–æ –∑–±—ñ–ª—å—à—É–π—Ç–µ –≤–∞–≥—É –Ω–∞ 2.5-5–∫–≥ —â–æ—Ç–∏–∂–Ω—è.';
      } else if (exerciseName.includes('—Å—Ç–∞–Ω–æ–≤–∞') || exerciseName.includes('—Ç—è–≥–∞')) {
        recommendationText = '–¢—Ä–∏–º–∞–π—Ç–µ —Å–ø–∏–Ω—É –ø—Ä—è–º–æ—é, –ø–æ—á–∏–Ω–∞–π—Ç–µ —Ä—É—Ö –∑ –Ω—ñ–≥. –ó–±—ñ–ª—å—à—É–π—Ç–µ –≤–∞–≥—É –Ω–∞ 2.5–∫–≥ –∫–æ–∂–Ω—ñ 1-2 —Ç–∏–∂–Ω—ñ.';
      } else if (exerciseName.includes('–∂–∏–º')) {
        recommendationText = '–ö–æ–Ω—Ç—Ä–æ–ª—é–π—Ç–µ –æ–ø—É—Å–∫–∞–Ω–Ω—è, –ø–æ–≤–Ω–∞ –∞–º–ø–ª—ñ—Ç—É–¥–∞ —Ä—É—Ö—É. –ü—Ä–æ–≥—Ä–µ—Å—É–π—Ç–µ –Ω–∞ 1.25-2.5–∫–≥ —â–æ—Ç–∏–∂–Ω—è.';
      } else if (exerciseName.includes('–ø—ñ–¥—Ç—è–≥—É–≤–∞–Ω–Ω—è') || exerciseName.includes('–≤—ñ–¥–∂–∏–º–∞–Ω–Ω—è')) {
        recommendationText = '–Ø–∫—â–æ –ª–µ–≥–∫–æ - –¥–æ–¥–∞–π—Ç–µ –≤–∞–≥—É –∞–±–æ –∑–±—ñ–ª—å—à—Ç–µ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω—å. –ü—Ä–æ–≥—Ä–µ—Å—É–π—Ç–µ –ø–æ—Å—Ç—É–ø–æ–≤–æ.';
      } else if (exerciseName.includes('–ø–ª–∞–Ω–∫–∞')) {
        recommendationText = '–¢—Ä–∏–º–∞–π—Ç–µ —Ç—ñ–ª–æ –ø—Ä—è–º–æ, –¥–∏—Ö–∞–π—Ç–µ —Ä—ñ–≤–Ω–æ–º—ñ—Ä–Ω–æ. –ó–±—ñ–ª—å—à—É–π—Ç–µ —á–∞—Å —É—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞ 10-15 —Å–µ–∫—É–Ω–¥ —â–æ—Ç–∏–∂–Ω—è.';
      } else if (exercise.weightType === 'bodyweight') {
        recommendationText = '–ö–æ–Ω—Ç—Ä–æ–ª—é–π—Ç–µ —Ç–µ–º–ø –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, —Ñ–æ–∫—É—Å—É–π—Ç–µ—Å—å –Ω–∞ —è–∫–æ—Å—Ç—ñ. –ó–±—ñ–ª—å—à—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç—É–ø–æ–≤–æ.';
      } else if (exercise.weightType === 'single') {
        recommendationText = '–ü—Ä–∞—Ü—é–π—Ç–µ –∑ –æ–¥–Ω–∞–∫–æ–≤–æ—é –≤–∞–≥–æ—é –≤ –æ–±–æ—Ö —Ä—É–∫–∞—Ö. –ó–±—ñ–ª—å—à—É–π—Ç–µ –≤–∞–≥—É –Ω–∞ 1-2–∫–≥ –∫–æ–∂–Ω—ñ 1-2 —Ç–∏–∂–Ω—ñ.';
      } else if (exercise.weightType === 'total') {
        recommendationText = '–î–æ—Ç—Ä–∏–º—É–π—Ç–µ—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó —Ç–µ—Ö–Ω—ñ–∫–∏. –ó–±—ñ–ª—å—à—É–π—Ç–µ –≤–∞–≥—É –Ω–∞ 2.5-5–∫–≥ —â–æ—Ç–∏–∂–Ω—è –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –≤—Å—ñ—Ö –ø–æ–≤—Ç–æ—Ä–µ–Ω—å.';
      } else {
        recommendationText = '–§–æ–∫—É—Å—É–π—Ç–µ—Å—å –Ω–∞ —è–∫–æ—Å—Ç—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ç–∞ –ø–æ–≤–Ω—ñ–π –∞–º–ø–ª—ñ—Ç—É–¥—ñ —Ä—É—Ö—É. –ü—Ä–æ–≥—Ä–µ—Å—É–π—Ç–µ –ø–æ—Å—Ç—É–ø–æ–≤–æ.';
      }
      
      return {
        ...exercise,
        recommendation: {
          text: recommendationText,
          action: 'maintain'
        }
      };
    }
    return exercise;
  });
};
