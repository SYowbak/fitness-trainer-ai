// –£—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º—ñ

export interface OfflineData {
  workoutLogs: any[];
  userProfile: any;
  workoutPlan: any[];
  currentSession?: any;
  lastSync: number;
}

const OFFLINE_STORAGE_KEY = 'fitness-offline-data';
const OFFLINE_QUEUE_KEY = 'fitness-offline-queue';

// –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–ª—è –æ—Ñ–ª–∞–π–Ω –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
export function saveOfflineData(data: Partial<OfflineData>): void {
  try {
    const existing = getOfflineData();
    const updated = {
      ...existing,
      ...data,
      lastSync: Date.now()
    };
    localStorage.setItem(OFFLINE_STORAGE_KEY, JSON.stringify(updated));
    // console.log('üíæ –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –¥–ª—è –æ—Ñ–ª–∞–π–Ω –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è');
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Ñ–ª–∞–π–Ω –¥–∞–Ω–∏—Ö:', error);
  }
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Ñ–ª–∞–π–Ω –¥–∞–Ω–∏—Ö
export function getOfflineData(): OfflineData {
  try {
    const data = localStorage.getItem(OFFLINE_STORAGE_KEY);
    if (data) {
      return JSON.parse(data);
    }
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –æ—Ñ–ª–∞–π–Ω –¥–∞–Ω–∏—Ö:', error);
  }
  
  return {
    workoutLogs: [],
    userProfile: null,
    workoutPlan: [],
    lastSync: 0
  };
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –¥–∞–Ω—ñ —Å–≤—ñ–∂—ñ (–º–µ–Ω—à–µ 24 –≥–æ–¥–∏–Ω)
export function isOfflineDataFresh(): boolean {
  const data = getOfflineData();
  const dayInMs = 24 * 60 * 60 * 1000;
  return (Date.now() - data.lastSync) < dayInMs;
}

// –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥—ñ—ó –≤ —á–µ—Ä–≥—É –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
export function addToOfflineQueue(action: {
  type: 'save_workout_log' | 'save_profile' | 'save_workout_plan';
  data: any;
  timestamp: number;
}): void {
  try {
    const queue = getOfflineQueue();
    queue.push(action);
    localStorage.setItem(OFFLINE_QUEUE_KEY, JSON.stringify(queue));
    console.log('üìù –î—ñ—é –¥–æ–¥–∞–Ω–æ –≤ –æ—Ñ–ª–∞–π–Ω —á–µ—Ä–≥—É:', action.type);
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –æ—Ñ–ª–∞–π–Ω —á–µ—Ä–≥—É:', error);
  }
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —á–µ—Ä–≥–∏ –æ—Ñ–ª–∞–π–Ω –¥—ñ–π
export function getOfflineQueue(): any[] {
  try {
    const queue = localStorage.getItem(OFFLINE_QUEUE_KEY);
    return queue ? JSON.parse(queue) : [];
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è –æ—Ñ–ª–∞–π–Ω —á–µ—Ä–≥–∏:', error);
    return [];
  }
}

// –û—á–∏—â–µ–Ω–Ω—è —á–µ—Ä–≥–∏ –ø—ñ—Å–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
export function clearOfflineQueue(): void {
  try {
    localStorage.removeItem(OFFLINE_QUEUE_KEY);
    console.log('‚úÖ –û—Ñ–ª–∞–π–Ω —á–µ—Ä–≥–∞ –æ—á–∏—â–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –æ—Ñ–ª–∞–π–Ω —á–µ—Ä–≥–∏:', error);
  }
}

// –û—á–∏—â–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –æ—Ñ–ª–∞–π–Ω –¥–∞–Ω–∏—Ö
export function clearStaleOfflineData(): void {
  try {
    const data = getOfflineData();
    const now = Date.now();
    const STALE_THRESHOLD = 7 * 24 * 60 * 60 * 1000; // 7 –¥–Ω—ñ–≤
    
    if (data.lastSync && (now - data.lastSync) > STALE_THRESHOLD) {
      console.log('üßπ –û—á–∏—â—É—î–º–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ –æ—Ñ–ª–∞–π–Ω –¥–∞–Ω—ñ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω—ñ–≤)');
      localStorage.removeItem(OFFLINE_STORAGE_KEY);
    }
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –¥–∞–Ω–∏—Ö:', error);
  }
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ localStorage –Ω–µ –ø–µ—Ä–µ–ø–æ–≤–Ω–µ–Ω–∏–π
export function checkLocalStorageHealth(): boolean {
  try {
    const testKey = 'localStorage_test';
    const testData = 'x'.repeat(1024); // 1KB —Ç–µ—Å—Ç
    localStorage.setItem(testKey, testData);
    localStorage.removeItem(testKey);
    return true;
  } catch (error) {
    console.warn('‚ö†Ô∏è localStorage –º–æ–∂–µ –±—É—Ç–∏ –ø–µ—Ä–µ–ø–æ–≤–Ω–µ–Ω–∏–π:', error);
    return false;
  }
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –º–µ—Ä–µ–∂—ñ
export function isOnline(): boolean {
  return navigator.onLine;
}

// –û–±—Ä–æ–±–∫–∞ –æ—Ñ–ª–∞–π–Ω –ø–æ–º–∏–ª–æ–∫ API
export function handleOfflineError(error: any, fallbackData?: any) {
  if (!isOnline()) {
    console.log('üìµ –û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ');
    return fallbackData || getOfflineData();
  }
  throw error;
}

// –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –æ—Ñ–ª–∞–π–Ω —á–µ—Ä–≥–∏ –ø—Ä–∏ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—ñ –º–µ—Ä–µ–∂—ñ
export async function syncOfflineQueue(
  syncFunctions: {
    saveWorkoutLog: (data: any) => Promise<void>;
    saveProfile: (data: any) => Promise<void>;
    saveWorkoutPlan: (data: any) => Promise<void>;
  }
): Promise<void> {
  const queue = getOfflineQueue();
  if (queue.length === 0) return;

  console.log(`üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è ${queue.length} –æ—Ñ–ª–∞–π–Ω –¥—ñ–π...`);

  for (const action of queue) {
    try {
      switch (action.type) {
        case 'save_workout_log':
          await syncFunctions.saveWorkoutLog(action.data);
          break;
        case 'save_profile':
          await syncFunctions.saveProfile(action.data);
          break;
        case 'save_workout_plan':
          await syncFunctions.saveWorkoutPlan(action.data);
          break;
      }
      console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ:', action.type);
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', action.type, error);
      // –ù–µ –≤–∏–¥–∞–ª—è—î–º–æ –∑ —á–µ—Ä–≥–∏ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
      return;
    }
  }

  clearOfflineQueue();
  console.log('üéâ –û—Ñ–ª–∞–π–Ω —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}
